// Copyright 2025 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-kms-wrapping. DO NOT EDIT.

package pb

import (
	"context"

	wrapping "github.com/hashicorp/go-kms-wrapping/v2"
	wrap "go.linka.cloud/protoc-gen-go-kms-wrapping"
)

var (
	_ = wrapping.Wrapper(nil)
	_ = wrap.Wrapper(nil)
)

// Wrap wraps the sensitive struct fields with the provided wrapper.
func (x *Sensitive) Wrap(ctx context.Context, w wrapping.Wrapper, opts ...wrapping.Option) error {
	if err := wrap.WrapValue(ctx, w, &x.Value, opts...); err != nil {
		return err
	}
	return nil
}

// Unwrap unwraps the sensitive struct fields with the provided wrapper.
func (x *Sensitive) Unwrap(ctx context.Context, w wrapping.Wrapper, opts ...wrapping.Option) error {
	if err := wrap.UnwrapValue(ctx, w, &x.Value, opts...); err != nil {
		return err
	}
	return nil
}
